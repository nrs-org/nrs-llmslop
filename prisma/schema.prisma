// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GlobalContext {
  global
}

model NRSContext {
  id                 GlobalContext @id @default(global)
  factorScoreWeights Json
}

model Entry {
  id        String   @id
  title     String
  bestGirl  String?
  progress  EntryProgress?
  additionalSources Json?
  dah_meta Json?

  // NRS-related fields
  impacts     ImpactContribution[]
  relations   RelationContribution[]
  referencedBy RelationReference[]
}

model EntryProgress {
  id        String   @id
  entry     Entry    @relation(fields: [id], references: [id], onDelete: Cascade)
  status    EntryStatus
  length_seconds Int?
  episode   Int?
}

enum EntryStatus {
  FINISHED
  IN_PROGRESS
  ABANDONED
  PAUSED
  NOT_STARTED
}

model Impact {
  id           String  @id
  name         String
  scoreVector  Json
  contributions ImpactContribution[]
}

model ImpactContribution {
  impactId String
  impact   Impact @relation(fields: [impactId], references: [id])
  entryId  String
  entry    Entry  @relation(fields: [entryId], references: [id])
  contributingWeight Json

  @@id([impactId, entryId])
}

model Relation {
  id            String   @id
  name          String
  references    RelationReference[]
  contributions RelationContribution[]
}

model RelationReference {
  relationId String
  relation   Relation @relation(fields: [relationId], references: [id])
  entryId    String
  entry      Entry    @relation(fields: [entryId], references: [id])
  transformMatrix Json

  @@id([relationId, entryId])
}

model RelationContribution {
  relationId String
  relation   Relation @relation(fields: [relationId], references: [id])
  entryId    String
  entry      Entry    @relation(fields: [entryId], references: [id])
  contributingWeight Json

  @@id([relationId, entryId])
}
